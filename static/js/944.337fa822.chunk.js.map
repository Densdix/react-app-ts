{"version":3,"file":"static/js/944.337fa822.chunk.js","mappings":"2NA2BMA,GAAiBC,EAAAA,EAAAA,GAAoD,CAEvEC,KAAM,SAFaD,EAjBwF,SAAH,GAA2C,IAAtCE,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAChI,OAAO,kBAAMC,SAAUD,EAAa,WAChC,0BAAK,SAAC,IAAK,CAACE,UAAWC,EAAAA,EAAaC,SAAU,CAACC,EAAAA,GAAaC,YAAY,QAASC,UAAU,QAAQC,KAAK,OAAOC,KAAK,QAAQC,GAAG,aAC/H,0BAAK,SAAC,IAAK,CAACR,UAAWC,EAAAA,EAAaC,SAAU,CAACC,EAAAA,GAAaC,YAAY,WAAWC,UAAU,QAAQC,KAAK,WAAWC,KAAK,WAAWC,GAAG,gBACxI,4BAAK,SAAC,IAAK,CAACR,UAAU,QAAQM,KAAK,WAAWC,KAAK,eAAc,iBAEhEV,IAAS,gBAAKY,UAAWC,EAAAA,EAAAA,UAAY,SAAEb,IACvCD,IACG,4BACI,0BAAK,gBAAKe,MAAO,CAACC,MAAO,SAAUC,IAAKjB,EAAYkB,IAAI,eACxD,0BAAK,SAAC,IAAK,CAACd,UAAWC,EAAAA,EAAaG,YAAY,UAAUC,UAAU,QAAQC,KAAK,OAAOC,KAAK,kBAGrG,gCAAM,mBAAQD,KAAK,SAAQ,yBAEnC,IA8DMS,GAAiBC,EAAAA,EAAAA,KAPD,SAACC,GACnB,MAAM,CACFC,OAAQD,EAAME,KAAKD,OACnBtB,WAAYqB,EAAME,KAAKvB,WAE/B,GAEgD,CAC5CwB,WAAYC,EAAAA,GACZC,eAAgBC,EAAAA,IAFGP,EAvD+C,SAACQ,GAKnE,OACI,8BACMA,EAAMN,QAcN,SAAC,KAAQ,CAACO,GAAG,cAbf,4BACI,iBAAKd,MAAO,CAACe,WAAY,UAAWd,MAAM,cAAee,cAAe,MAAOC,aAAc,OAAO,WAChG,2EACA,oCAAU,kDACV,uCAAa,uCAEjB,sCACA,SAACnC,EAAc,CAACG,WAAY4B,EAAM5B,WAAYG,SAdzC,SAAC8B,GACdL,EAAMJ,WAAWS,GACjBC,QAAQC,IAAI,WAAWF,EAC3B,KAYY,0BACI,wBAQpB,IAoCA,W","sources":["components/Login/Login.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrentUserThunkCreator, userSignInThunkCreator} from \"../../redux/authReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {emptyField} from \"../../utils/validators\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport s from \"../common/FormsControls/FormControls.module.css\";\r\nimport {AppStateType} from \"../../redux/reactStore\";\r\n\r\nlet LoginForm: React.FC<InjectedFormProps<LoginFormDataType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({captchaUrl, error, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><Field component={FormControl} validate={[emptyField]} placeholder=\"Email\"  typefield=\"input\" type=\"text\" name=\"email\" id=\"email\"/></div>\r\n        <div><Field component={FormControl} validate={[emptyField]} placeholder=\"Password\" typefield=\"input\" type=\"password\" name=\"password\" id=\"password\"/></div>\r\n        <div><Field component=\"input\" type=\"checkbox\" name=\"rememberMe\"/>remember me</div>\r\n\r\n        {error && <div className={s.errorText}>{error}</div>}\r\n        {captchaUrl &&\r\n            <div>\r\n                <div><img style={{width: \"175px\"}} src={captchaUrl} alt=\"captcha\"/></div>\r\n                <div><Field component={FormControl} placeholder=\"Captcha\" typefield=\"input\" type=\"text\" name=\"captcha\"/></div>\r\n            </div>\r\n        }\r\n        <div> <button type=\"submit\">Submit</button></div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormDataType, LoginFormOwnPropsType>({\r\n    // a unique name for the form\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormDataType) => {\r\n        props.userSignIn(formData)\r\n        console.log(\"formData\",formData)\r\n    }\r\n    return (\r\n        <>\r\n            {!props.isAuth ?\r\n            <div>\r\n                <div style={{background: '#eed036', width:'fit-content', paddingInline: '5px', borderRadius: '5px'}}>\r\n                    <h4>Email and Password for testing social network</h4>\r\n                    <p>Email: <b>free@samuraijs.com</b></p>\r\n                    <p>Password: <b>free</b></p>\r\n                </div>\r\n                <div>Sign In</div>\r\n                <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n                <div>\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            : <Navigate to=\"/profile\"/>}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    userSignIn: (formData: LoginFormDataType) => void\r\n    setCurrentUser: () => void\r\n}\r\n\r\nexport type LoginFormOwnPropsType = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nexport type LoginFormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?:string\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {\r\n    userSignIn: userSignInThunkCreator,\r\n    setCurrentUser: setCurrentUserThunkCreator\r\n})(Login)\r\n\r\n\r\nexport default LoginContainer"],"names":["LoginReduxForm","reduxForm","form","captchaUrl","error","handleSubmit","onSubmit","component","FormControl","validate","emptyField","placeholder","typefield","type","name","id","className","s","style","width","src","alt","LoginContainer","connect","state","isAuth","auth","userSignIn","userSignInThunkCreator","setCurrentUser","setCurrentUserThunkCreator","props","to","background","paddingInline","borderRadius","formData","console","log"],"sourceRoot":""}