{"version":3,"file":"static/js/968.c71a3402.chunk.js","mappings":"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","sources":["webpack://react-app-ts/./src/components/Users/Users.module.css?b9d0","components/Users/Paginators/PaginatorWithArrows.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Users_avatar__Qvfll\",\"activeTab\":\"Users_activeTab__BIY+m\",\"tab\":\"Users_tab__swPRc\",\"cell\":\"Users_cell__bkdPh\",\"activeCell\":\"Users_activeCell__bKpRg\",\"arrowBtn\":\"Users_arrowBtn__mhldG\",\"left\":\"Users_left__rMMXc\"};","import React from \"react\";\r\nimport s from \"../Users.module.css\";\r\n\r\n// import leftArrow from \"./images/icons8-налево-96.png\"\r\n// import rightArrow from \"./images/icons8-направо-96.png\"\r\n// import doubleLeftArrow from \"./images/icons8-двойная-стрелка-влево-96.png\"\r\n// import doubleRightArrow from \"./images/icons8-двойная-стрелка-вправо-96.png\"\r\n\r\ntype PropsType = {\r\n    pages: Array<number>\r\n    currentPage: number\r\n    updateCurrentPage: (pageNumber: number) => void\r\n}\r\n\r\nconst PaginatorWithArrows: React.FC<PropsType> = ({pages, currentPage, updateCurrentPage}) => {\r\n\r\n    let curP: number = currentPage\r\n    let curPF: number = ((curP - 5) < 0) ? 0 : ((curP + 5) > pages.length) ? pages.length - 10 : curP - 5 //4323 - 5 = 4318\r\n    let curPL: number = ((curP - 5) < 0) ? 10 : ((curP + 5) > pages.length) ? pages.length : curP + 5 //4323 + 5 = 4328\r\n    let slicedPages: Array<number> = pages.slice(curPF, curPL)\r\n\r\n    return(\r\n        <div>\r\n            <span><button className={s.arrowBtn} disabled={currentPage === 1} onClick={() => updateCurrentPage(1)}>{`<<`}</button></span>\r\n            <span><button className={s.arrowBtn} disabled={currentPage === 1} onClick={() => updateCurrentPage(curP - 1)}>{`<`}</button></span>\r\n            {slicedPages.map(p => {\r\n                return(\r\n                    <span onClick={() => updateCurrentPage(p)}\r\n                          className={`${s.tab}`}>\r\n                    {<span className={`${s.cell} ${currentPage === p && s.activeTab} `}>{p}</span>}\r\n                </span>\r\n                )\r\n            })}\r\n            <span><button className={s.arrowBtn} disabled={currentPage === pages.length} onClick={() => updateCurrentPage(curP + 1)}>{`>`}</button></span>\r\n            <span><button className={s.arrowBtn} disabled={currentPage === pages.length} onClick={() => updateCurrentPage(pages.length)}>{`>>`}</button></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginatorWithArrows","import React, {useEffect} from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport noAvatar from \"../../assets/images/noavatar.png\"\r\nimport {createSearchParams, NavLink, useLocation, useNavigate} from \"react-router-dom\";\r\nimport PaginatorWithArrows from \"./Paginators/PaginatorWithArrows\";\r\nimport {\r\n    followUserThunkCreator,\r\n    getUsersThunkCreator,\r\n    unfollowUserThunkCreator,\r\n    usersActionsCreators\r\n} from \"../../redux/usersReducer\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {useAppDispatch, useAppSelector, useAppThunkDispatch} from \"../../redux/hooks\";\r\n\r\ntype PropsType = {}\r\n\r\nconst Users: React.FC<PropsType> = () => {\r\n    const pageSize = useAppSelector(state => state.usersPage.pageSize)\r\n    const totalUsersCount = useAppSelector(state => state.usersPage.totalUsersCount)\r\n    const currentPage = useAppSelector(state => state.usersPage.currentPage)\r\n    const usersData = useAppSelector(state => state.usersPage.usersData)\r\n    const followingElements = useAppSelector(state => state.usersPage.followingElements)\r\n    const filter = useAppSelector(state => state.usersPage.filter)\r\n\r\n    const actionDispatch = useAppDispatch()\r\n    const thunkDispatch = useAppThunkDispatch()\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(() => {\r\n        const query = new URLSearchParams(location.search);\r\n        const queryFriend = query.get(\"friend\");\r\n        const queryPage = query.get(\"page\");\r\n        const queryTerm = query.get(\"term\") as string;\r\n\r\n        let actualFilter = {...filter}\r\n        let actualPage = currentPage;\r\n\r\n        if (queryPage) {\r\n            actualPage = Number(queryPage)\r\n            actionDispatch(usersActionsCreators.setCurrentPageActionCreator(Number(queryPage)))\r\n            console.log(\"queryPage\")\r\n        }\r\n\r\n        if (queryTerm) {\r\n            actualFilter = {...actualFilter, term: queryTerm}\r\n            console.log(\"queryTerm\")\r\n        }\r\n\r\n        switch (queryFriend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null};\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true};\r\n                break;\r\n            case \"false\":\r\n                actualFilter = {...actualFilter, friend: false};\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (queryFriend || queryTerm) {\r\n            actionDispatch(usersActionsCreators.setUserSearchFilterActionCreator(actualFilter.term, actualFilter.friend))\r\n        }\r\n\r\n        console.log(\"useEffect1:currentPage\", currentPage)\r\n        console.log(\"User:searchParams\", {queryFriend, queryPage, queryTerm})\r\n        getUsers(undefined, actualPage, actualFilter.term, actualFilter.friend)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getUsers(pageSize, currentPage, filter.term, filter.friend)\r\n        console.log(\"useEffect2:currentPage\", currentPage)\r\n\r\n        let createdSearchParams = createSearchParams({\r\n            page: `${currentPage}`,\r\n            pageSize: `${pageSize}`,\r\n            term: `${filter.term}`,\r\n            friend: `${filter.friend}`,\r\n        })\r\n        createdSearchParams.delete(\"pageSize\")\r\n        currentPage === 1 && createdSearchParams.delete(\"page\")\r\n        filter.friend === null && createdSearchParams.delete(\"friend\")\r\n        filter.term === \"\" && createdSearchParams.delete(\"term\")\r\n\r\n        navigate(`/users?${createdSearchParams}`)\r\n\r\n    }, [pageSize, currentPage, filter])\r\n\r\n    const followUser = (userId: number) => {\r\n        thunkDispatch(followUserThunkCreator(userId))\r\n    }\r\n\r\n    const unfollowUser = (userId: number) => {\r\n        thunkDispatch(unfollowUserThunkCreator(userId))\r\n    }\r\n\r\n    const updateCurrentPage = (pageNum: number) => {\r\n        actionDispatch(usersActionsCreators.setCurrentPageActionCreator(pageNum))\r\n        getUsers(pageSize, pageNum)\r\n    }\r\n\r\n    const getUsers = (pageSize?: number, currentPage?: number, term?: string, friend?: boolean | null) => {\r\n        thunkDispatch(getUsersThunkCreator(pageSize, currentPage, term, friend))\r\n    }\r\n\r\n    const setFilter = (term: string, friend: boolean | null) => {\r\n        actionDispatch(usersActionsCreators.setUserSearchFilterActionCreator(term, friend))\r\n    }\r\n\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (<div>\r\n        <UserSearchForm getUsers={getUsers} setFilter={setFilter}/>\r\n        <UserSearchHookForm getUsers={getUsers} setFilter={setFilter}/>\r\n        <PaginatorWithArrows pages={pages}\r\n                             currentPage={currentPage}\r\n                             updateCurrentPage={updateCurrentPage}/>\r\n        <div className=\"grid grid-rows-5 grid-flow-col pt-4 sm:grid-rows-1\">\r\n        {usersData.map(el =>\r\n                <div className=\"bg-gray-100 flex items-center pb-2\">\r\n                    <div\r\n                        className=\"w-48 p-6 bg-white rounded-xl shadow-xl hover:shadow-2xl hover:scale-105 transition-all transform duration-500\">\r\n                        <NavLink to={\"/profile/\" + el.id}><img className=\"w-40 object-cover rounded-t-md m-auto\"\r\n                                                               src={el.photos.small != null ? el.photos.small : noAvatar} alt=\"\"/></NavLink>\r\n                        <div className=\"mt-4\">\r\n                            <h1 className=\"text-sm font-bold text-gray-700\">{el.name}</h1>\r\n                            <p className=\"text-xs mt-2 text-gray-700 break-all h-4\">{el.status}</p>\r\n                            <div className=\"mt-4 mb-2\">\r\n                                {el.followed\r\n                                ? <button\r\n                                    className=\"text-sm block font-semibold py-2 px-6 text-green-100 hover:text-white bg-red-400 rounded-lg shadow hover:shadow-md transition duration-300\"\r\n                                    onClick={() => {unfollowUser(el.id)}}>\r\n                                        Unfollow\r\n                                </button>\r\n                                : <button\r\n                                        className=\"text-sm block font-semibold py-2 px-6 text-green-100 hover:text-white bg-green-400 rounded-lg shadow hover:shadow-md transition duration-300\"\r\n                                        onClick={() => {followUser(el.id)}}>\r\n                                        Follow\r\n                                    </button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            // <span>\r\n            //         <span>\r\n            //             <div>\r\n            //                 <NavLink to={\"/profile/\" + el.id}>\r\n            //                 <img\r\n            //                     className={s.avatar}\r\n            //                     src={el.photos.small != null ? el.photos.small : noAvatar}\r\n            //                     alt=\"img\"/>\r\n            //                 </NavLink>\r\n            //             </div>\r\n            //             <div>\r\n            //                 {el.followed ?\r\n            //                     <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-2 rounded\"\r\n            //                             disabled={followingElements.some(id => id === el.id)} onClick={() => {\r\n            //                         unfollowUser(el.id)\r\n            //                     }}>Unfollow</button>\r\n            //\r\n            //                     : <button disabled={followingElements.some(id => id === el.id)} onClick={() => {\r\n            //                         followUser(el.id)\r\n            //                     }}>Follow</button>}\r\n            //             </div>\r\n            //\r\n            //         </span>\r\n            //         <span>\r\n            //             <span>\r\n            //                 <div>{el.name}</div>\r\n            //                 <div>{el.status}</div>\r\n            //             </span>\r\n            //         </span>\r\n            //         <br/>\r\n            //     </span>\r\n        )\r\n        }\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\ninterface MyFormValues {\r\n    term: string\r\n    friend?: string\r\n}\r\n\r\ninterface IUserSearchForm {\r\n    getUsers: (pageSize?: number, currentPage?: number, term?: string, friend?: boolean | null) => void\r\n    setFilter: (term: string, friend: boolean | null) => void\r\n}\r\n\r\nconst UserSearchForm: React.FC<IUserSearchForm> = ({getUsers, setFilter}) => {\r\n\r\n    const filter = useAppSelector(state => state.usersPage.filter)\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{term: filter.term, friend: String(filter.friend)}}\r\n            onSubmit={(values: MyFormValues, {setSubmitting}) => {\r\n                setTimeout(() => {\r\n                    console.log(values)\r\n                    let friend = values.friend === \"null\" ? null : values.friend === \"true\"\r\n                    setFilter(values.term, friend)\r\n                    getUsers(undefined, undefined, values.term, friend)\r\n                    setSubmitting(false);\r\n                }, 400);\r\n            }}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder=\"Filter users\"></Field>\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button\r\n                        className=\"ml-1 bg-blue-500 hover:bg-blue-400 text-white font-bold px-1 hover:border-blue-500 rounded\"\r\n                        type=\"submit\" disabled={isSubmitting}>\r\n                        Send (Formik)\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst UserSearchHookForm: React.FC<IUserSearchForm> = ({getUsers, setFilter}) => {\r\n\r\n\r\n    const filter = useAppSelector(state => state.usersPage.filter)\r\n\r\n    const {register, handleSubmit, reset, formState: {errors}} = useForm<MyFormValues>({mode: \"onChange\"});\r\n    const onSubmit: SubmitHandler<MyFormValues> = data => {\r\n        console.log(data);\r\n        let friend = data.friend === \"null\" ? null : data.friend === \"true\"\r\n        setFilter(data.term, friend)\r\n        getUsers(undefined, undefined, data.term, friend)\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(formValues => ({...formValues, friend: String(filter.friend), term: filter.term}))\r\n    }, [filter])\r\n\r\n    return (\r\n        <form className=\"py-2\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <input defaultValue={filter.term} {...register(\"term\", {maxLength: 255})} type=\"text\"\r\n                   placeholder=\"Filter users\"/>\r\n            {errors.term && errors.term.type === \"maxLength\" && <span>Max length 255 symbols</span>}\r\n            <select id=\"friend\" {...register(\"friend\", {maxLength: 255})}>\r\n                <option value=\"null\">All</option>\r\n                <option value=\"true\">Only followed</option>\r\n                <option value=\"false\">Only unfollowed</option>\r\n            </select>\r\n            <button\r\n                className=\"ml-1 bg-blue-500 hover:bg-blue-400 text-white font-bold px-1 hover:border-blue-500 rounded\"\r\n                type=\"submit\">Send (Hook)\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {useAppSelector} from \"../../redux/hooks\";\r\n\r\nconst UsersContainer = () => {\r\n\r\n    const isFetching = useAppSelector(state => state.usersPage.isFetching)\r\n\r\n    console.log(\"UC render\")\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(UsersContainer)"],"names":["pages","currentPage","updateCurrentPage","curP","curPF","length","curPL","slicedPages","slice","className","s","disabled","onClick","map","p","UserSearchForm","getUsers","setFilter","filter","useAppSelector","state","usersPage","enableReinitialize","initialValues","term","friend","String","onSubmit","values","setSubmitting","setTimeout","console","log","undefined","isSubmitting","type","name","placeholder","as","value","UserSearchHookForm","useForm","mode","register","handleSubmit","reset","errors","formState","useEffect","formValues","data","defaultValue","maxLength","id","pageSize","totalUsersCount","usersData","followingElements","actionDispatch","useAppDispatch","thunkDispatch","useAppThunkDispatch","location","useLocation","navigate","useNavigate","query","URLSearchParams","search","queryFriend","get","queryPage","queryTerm","actualFilter","actualPage","Number","usersActionsCreators","createdSearchParams","createSearchParams","page","delete","getUsersThunkCreator","pagesCount","Math","ceil","i","push","pageNum","el","to","src","photos","small","noAvatar","alt","status","followed","userId","unfollowUserThunkCreator","followUserThunkCreator","withAuthRedirect","isFetching","Preloader"],"sourceRoot":""}